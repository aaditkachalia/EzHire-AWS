{"ast":null,"code":"import _slicedToArray from \"/Users/aadit/.config/yarn/global/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aadit/Desktop/Final Year/Code/EzHire2020/src/views/ScheduleInterview/ScheduleInterview.js\";\nimport React from 'react';\nimport InterCard from './InterCard.js';\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport history from \"history.js\";\nimport ReactLoading from 'react-loading';\nimport Config from \"../../Config.js\";\nimport Auth from \"../../Auth.js\";\nexport default function ScheduleInterview() {\n  Auth();\n  var ans;\n  var todoiter = \"\";\n\n  var _React$useState = React.useState('false'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isloaded = _React$useState2[0],\n      setLoad = _React$useState2[1];\n\n  var _React$useState3 = React.useState('false'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isschedule = _React$useState4[0],\n      setSchedule = _React$useState4[1];\n\n  var user = localStorage.getItem('user_id');\n  var data = {\n    \"user\": user\n  };\n  fetch(Config.serverurl + \"/scheduleinterview\", {\n    method: 'POST',\n    body: JSON.stringify(data)\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    localStorage.setItem(\"interdata\", JSON.stringify(res));\n    setLoad('true');\n    data = \"\";\n  }); //x=JSON.stringify(x)\n  //alert(ans)\n\n  if (isloaded == 'true') {\n    ans = localStorage.getItem('interdata');\n\n    if (ans != \"null\") {\n      ans = JSON.parse(ans);\n      ans = Object.entries(ans).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        return React.createElement(InterCard, {\n          key: key,\n          name: value.name,\n          role: value.role,\n          opento: value.opento,\n          cid: key,\n          cname: user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      });\n    } else {\n      ans = \"Start by clicking on Set Interviews to schedule interviews\";\n    }\n\n    return React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, ans);\n  } else {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(ReactLoading, {\n      type: 'cylon',\n      color: 'skyblue',\n      height: '18%',\n      width: '25%',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/aadit/Desktop/Final Year/Code/EzHire2020/src/views/ScheduleInterview/ScheduleInterview.js"],"names":["React","InterCard","GridContainer","history","ReactLoading","Config","Auth","ScheduleInterview","ans","todoiter","useState","isloaded","setLoad","isschedule","setSchedule","user","localStorage","getItem","data","fetch","serverurl","method","body","JSON","stringify","then","res","json","setItem","parse","Object","entries","map","key","value","name","role","opento","display","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,eAAe,SAASC,iBAAT,GAA4B;AAC3CD,EAAAA,IAAI;AACJ,MAAIE,GAAJ;AACA,MAAIC,QAAQ,GAAC,EAAb;;AAH2C,wBAIfT,KAAK,CAACU,QAAN,CAAe,OAAf,CAJe;AAAA;AAAA,MAIpCC,QAJoC;AAAA,MAI1BC,OAJ0B;;AAAA,yBAKTZ,KAAK,CAACU,QAAN,CAAe,OAAf,CALS;AAAA;AAAA,MAKpCG,UALoC;AAAA,MAKxBC,WALwB;;AAM3C,MAAMC,IAAI,GAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX;AACA,MAAIC,IAAI,GAAE;AAAC,YAAOH;AAAR,GAAV;AACAI,EAAAA,KAAK,CAACd,MAAM,CAACe,SAAP,GAAiB,oBAAlB,EAAuC;AACpCC,IAAAA,MAAM,EAAC,MAD6B;AAE1CC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAFqC,GAAvC,CAAL,CAIOO,IAJP,CAIY,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAJf,EAKOF,IALP,CAKY,UAAAC,GAAG,EAAG;AAChBV,IAAAA,YAAY,CAACY,OAAb,CAAqB,WAArB,EAAiCL,IAAI,CAACC,SAAL,CAAeE,GAAf,CAAjC;AAEAd,IAAAA,OAAO,CAAC,MAAD,CAAP;AACAM,IAAAA,IAAI,GAAC,EAAL;AACD,GAVD,EAR2C,CAmBnC;AACA;;AAEP,MAAGP,QAAQ,IAAE,MAAb,EAAoB;AACnBH,IAAAA,GAAG,GAAGQ,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAN;;AACA,QAAGT,GAAG,IAAE,MAAR,EAAe;AACfA,MAAAA,GAAG,GAACe,IAAI,CAACM,KAAL,CAAWrB,GAAX,CAAJ;AACAA,MAAAA,GAAG,GAACsB,MAAM,CAACC,OAAP,CAAevB,GAAf,EAAoBwB,GAApB,CAAwB,gBAAkB;AAAA;AAAA,YAAhBC,GAAgB;AAAA,YAAXC,KAAW;;AACxC,eACI,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAED,GAAhB;AAAqB,UAAA,IAAI,EAAEC,KAAK,CAACC,IAAjC;AAAuC,UAAA,IAAI,EAAED,KAAK,CAACE,IAAnD;AAAyD,UAAA,MAAM,EAAEF,KAAK,CAACG,MAAvE;AAA+E,UAAA,GAAG,EAAEJ,GAApF;AAAyF,UAAA,KAAK,EAAElB,IAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJC,CAAJ;AAKA,KAPA,MAQG;AACHP,MAAAA,GAAG,GAAC,4DAAJ;AACA;;AACD,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIA,GADJ,CADF;AAKA,GAlBA,MAoBG;AACH,WACA;AAAK,MAAA,KAAK,EAAE;AAAC8B,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,cAAc,EAAE;AAAlC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,OAApB;AAA6B,MAAA,KAAK,EAAE,SAApC;AAA+C,MAAA,MAAM,EAAE,KAAvD;AAA8D,MAAA,KAAK,EAAE,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADA;AAMA;AACA","sourcesContent":["import React from 'react';\nimport InterCard from './InterCard.js'\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport history from \"history.js\"\nimport ReactLoading from 'react-loading';\nimport Config from \"../../Config.js\"\nimport Auth from \"../../Auth.js\"\n\nexport default function ScheduleInterview(){\nAuth()\nlet ans\nlet todoiter=\"\"\nconst [isloaded, setLoad] = React.useState('false')\nconst [isschedule, setSchedule] = React.useState('false')\nconst user=localStorage.getItem('user_id')\nvar data ={\"user\":user}\nfetch(Config.serverurl+\"/scheduleinterview\",{\n        method:'POST',\n\t\tbody:JSON.stringify(data),\n      })\n      .then(res => res.json())\n      .then(res =>{\n\t\tlocalStorage.setItem(\"interdata\",JSON.stringify(res))\n\n\t\tsetLoad('true')\n\t\tdata=\"\"\n})\n        //x=JSON.stringify(x)\n        //alert(ans)\n        \n if(isloaded=='true'){\n \tans = localStorage.getItem('interdata')\n \tif(ans!=\"null\"){\n \tans=JSON.parse(ans)\n \tans=Object.entries(ans).map(([key, value]) => {\n        return (\n            <InterCard key={key} name={value.name} role={value.role} opento={value.opento} cid={key} cname={user}/>\n        )\n    })\n }\n else{\n \tans=\"Start by clicking on Set Interviews to schedule interviews\"\n }\n\treturn(\n\t\t\t<GridContainer>\n   \t\t\t{ans}\n\t\t\t</GridContainer>\n\t\t)\n}\n\nelse{\n\treturn(\n\t<div style={{display: 'flex', justifyContent: 'center'}}>\n\t<ReactLoading type={'cylon'} color={'skyblue'} height={'18%'} width={'25%'} />\n\t<br />\n\t</div>\n\t)\n}\n}"]},"metadata":{},"sourceType":"module"}