{"ast":null,"code":"import _slicedToArray from \"/Users/aadit/.config/yarn/global/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aadit/Desktop/Final Year/Code/EzHire2020/src/views/PastInterviews/PastInterviews.js\";\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport MaterialTable from 'material-table';\nimport ReactLoading from 'react-loading';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Config from \"../../Config.js\";\nimport Auth from \"../../Auth.js\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    button: {\n      margin: theme.spacing(1)\n    },\n    modal: {\n      display: 'inline-grid',\n      alignItems: 'center',\n      justifyContent: 'center',\n      overflow: 'scroll'\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    }\n  };\n});\nexport default function TableList() {\n  Auth();\n  var interfbnames = [];\n  var namejson = {};\n  var interviewname;\n  var pastinterview;\n  var statusint;\n\n  var _React$useState = React.useState('false'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isloaded = _React$useState2[0],\n      setLoad = _React$useState2[1];\n\n  var classes = useStyles();\n  var user = localStorage.getItem('user_id');\n  var data = {\n    \"user\": user\n  };\n  fetch(Config.serverurl + \"/pastinterview\", {\n    method: 'POST',\n    body: JSON.stringify(data)\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    localStorage.setItem(\"pastinterview\", JSON.stringify(res));\n    setLoad('true');\n    data = \"\";\n  });\n\n  if (isloaded == 'true') {\n    pastinterview = localStorage.getItem('pastinterview');\n\n    if (pastinterview != \"null\") {\n      pastinterview = JSON.parse(pastinterview);\n      var result = Object.entries(pastinterview).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        //console.log(value)\n        Object.entries(value['results']).map(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              key1 = _ref4[0],\n              value1 = _ref4[1];\n\n          console.log(key1 + \" yoo \" + user);\n\n          if (key1 == user) {\n            statusint = value1.Status;\n          }\n        });\n        namejson = {\n          cname: value.cname,\n          role: value.role,\n          location: value.location,\n          status: statusint\n        };\n        interfbnames.push(namejson);\n        namejson = {};\n      });\n      return React.createElement(MaterialTable, {\n        columns: [{\n          title: 'Company Name',\n          field: 'cname'\n        }, {\n          title: 'Role',\n          field: 'role'\n        }, {\n          title: 'Job Location',\n          field: 'location'\n        }, {\n          title: 'Status',\n          field: 'status'\n        }],\n        options: {\n          selection: false\n        },\n        data: interfbnames,\n        title: \"Interviews Taken\" //onSelectionChange={(rows) => handleselection(rows)}\n        //onRowClick={(event,rowData) => viewResume()}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }\n  } else {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(ReactLoading, {\n      type: 'cylon',\n      color: 'skyblue',\n      height: '18%',\n      width: '25%',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/aadit/Desktop/Final Year/Code/EzHire2020/src/views/PastInterviews/PastInterviews.js"],"names":["React","useLocation","MaterialTable","ReactLoading","Button","makeStyles","Config","Auth","useStyles","theme","button","margin","spacing","modal","display","alignItems","justifyContent","overflow","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","TableList","interfbnames","namejson","interviewname","pastinterview","statusint","useState","isloaded","setLoad","classes","user","localStorage","getItem","data","fetch","serverurl","method","body","JSON","stringify","then","res","json","setItem","parse","result","Object","entries","map","key","value","key1","value1","console","log","Status","cname","role","location","status","push","title","field","selection"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { useLocation } from \"react-router-dom\";\nimport MaterialTable from 'material-table'\nimport ReactLoading from 'react-loading';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Config from \"../../Config.js\"\nimport Auth from \"../../Auth.js\"\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n   modal: {\n    display: 'inline-grid',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow:'scroll',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\n\nexport default function TableList() {\n  Auth()\n  let interfbnames=[]\n  let namejson={}\n  let interviewname\n  let pastinterview\n  let statusint\n  let [isloaded, setLoad] = React.useState('false')\n  const classes = useStyles();\n  let user=localStorage.getItem('user_id')\n  var data ={\"user\": user}\n  fetch(Config.serverurl+\"/pastinterview\",{\n        method:'POST',\n    body:JSON.stringify(data),\n      })\n      .then(res => res.json())\n      .then(res =>{\n    localStorage.setItem(\"pastinterview\",JSON.stringify(res))\n    setLoad('true')\n    data=\"\"\n})\nif(isloaded=='true'){\n  pastinterview=localStorage.getItem('pastinterview')\n  if(pastinterview!=\"null\"){\n  pastinterview=JSON.parse(pastinterview)\n  let result=Object.entries(pastinterview).map(([key, value]) => {\n        //console.log(value)\n        Object.entries(value['results']).map(([key1, value1]) => {\n          console.log(key1 + \" yoo \"+user)\n          if(key1==user){\n            statusint=value1.Status\n          }\n          \n        })\n        namejson={cname : value.cname, role: value.role, location:value.location, status:statusint}\n        interfbnames.push(namejson)\n        namejson={}\n    })\n  return (\n\n        <MaterialTable\n          columns={[\n            { title: 'Company Name', field: 'cname' },\n            { title: 'Role', field: 'role' },\n            { title: 'Job Location', field: 'location' },\n            { title: 'Status', field: 'status'}\n          ]}\n          options={{\n      selection: false\n          }}\n          data={interfbnames}\n          title={\"Interviews Taken\"}\n          //onSelectionChange={(rows) => handleselection(rows)}\n          //onRowClick={(event,rowData) => viewResume()}\n        />\n  );\n}\n}\nelse{\n  return(\n  <div style={{display: 'flex', justifyContent: 'center'}}>\n  <ReactLoading type={'cylon'} color={'skyblue'} height={'18%'} width={'25%'} />\n  <br />\n  </div>\n  )\n}\n}\n"]},"metadata":{},"sourceType":"module"}