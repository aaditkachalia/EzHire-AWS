{"ast":null,"code":"import _slicedToArray from \"/Users/aadit/.config/yarn/global/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aadit/Desktop/Final Year/Code/EzHire2020/src/views/UserProfile/UserProfile.js\";\nimport React, { useState, useEffect } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport AddAlert from \"@material-ui/icons/AddAlert\"; // core components\n\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport Config from \"../../Config.js\";\nimport avatar from \"assets/img/faces/apurva.jpg\";\nimport Auth from \"../../Auth.js\";\nvar styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n};\nvar useStyles = makeStyles(styles);\nexport default function UserProfile() {\n  Auth();\n  var classes = useStyles();\n\n  var _React$useState = React.useState(\"false\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoad = _React$useState2[0],\n      setLoad = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      username = _React$useState4[0],\n      usetusername = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      firstName = _React$useState6[0],\n      usetfirstName = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      lastName = _React$useState8[0],\n      usetlastName = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      email = _React$useState10[0],\n      usetemail = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      city = _React$useState12[0],\n      usetcity = _React$useState12[1];\n\n  var _React$useState13 = React.useState(\"\"),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      postalCode = _React$useState14[0],\n      usetpostalCode = _React$useState14[1];\n\n  var _React$useState15 = React.useState(\"\"),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      aboutMe = _React$useState16[0],\n      usetaboutMe = _React$useState16[1];\n\n  var _React$useState17 = React.useState(false),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      tl = _React$useState18[0],\n      setTL = _React$useState18[1];\n\n  var bot = \"bottom\";\n  var cen = \"center\";\n  React.useEffect(function () {\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      // to stop the warning of calling setState of unmounted component\n      var id = window.setTimeout(null, 0);\n\n      while (id--) {\n        window.clearTimeout(id);\n      }\n    };\n  });\n\n  var showNotification = function showNotification(place) {\n    switch (place) {\n      case \"tl\":\n        if (!tl) {\n          setTL(true);\n          setTimeout(function () {\n            setTL(false);\n          }, 1000);\n        }\n\n    }\n  };\n\n  useEffect(function () {\n    var user = localStorage.getItem('user_id');\n    var data1 = {\n      \"user\": user\n    };\n    fetch(Config.serverurl + \"/getprofile\", {\n      method: 'POST',\n      body: JSON.stringify(data1)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      var userprofile = res;\n\n      if (isLoad == \"false\") {\n        usetusername(userprofile.username);\n        usetfirstName(userprofile.firstName);\n        usetlastName(userprofile.lastName);\n        usetemail(userprofile.email);\n        usetcity(userprofile.city);\n        usetpostalCode(userprofile.postalCode);\n        usetaboutMe(userprofile.aboutMe);\n        setLoad(\"true\");\n      }\n    });\n  });\n\n  function updateprofile() {\n    var data = {\n      \"fname\": firstName,\n      \"lname\": lastName,\n      \"email\": email,\n      \"city\": city,\n      \"code\": postalCode,\n      \"aboutme\": aboutMe\n    };\n  }\n\n  if (isLoad == \"true\") {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: classes.cardTitleWhite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Edit Profile\"), React.createElement(\"p\", {\n      className: classes.cardCategoryWhite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Complete your profile\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      labelText: \"Username\",\n      id: \"username\",\n      inputProps: {\n        value: username,\n        onChange: function onChange(e) {\n          return usetusername(e.target.value);\n        }\n      },\n      formControlProps: {\n        fullWidth: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      disabled: \"True\",\n      labelText: \"Email address\",\n      id: \"email-address\",\n      inputProps: {\n        value: email,\n        onChange: function onChange(e) {\n          return usetemail(e.target.value);\n        }\n      },\n      formControlProps: {\n        fullWidth: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))), React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      labelText: \"First Name\",\n      id: \"first-name\",\n      inputProps: {\n        value: firstName,\n        onChange: function onChange(e) {\n          return usetfirstName(e.target.value);\n        }\n      },\n      formControlProps: {\n        fullWidth: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      labelText: \"Last Name\",\n      id: \"last-name\",\n      inputProps: {\n        value: lastName,\n        onChange: function onChange(e) {\n          return usetlastName(e.target.value);\n        }\n      },\n      formControlProps: {\n        fullWidth: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))), React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      labelText: \"City\",\n      id: \"city\",\n      inputProps: {\n        value: city,\n        onChange: function onChange(e) {\n          return usetcity(e.target.value);\n        }\n      },\n      formControlProps: {\n        fullWidth: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(CustomInput, {\n      labelText: \"Postal Code\",\n      id: \"postal-code\",\n      inputProps: {\n        value: postalCode,\n        onChange: function onChange(e) {\n          return usetpostalCode(e.target.value);\n        }\n      },\n      formControlProps: {\n        fullWidth: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }))), React.createElement(GridContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      style: {\n        color: \"#AAAAAA\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"About me\"), React.createElement(CustomInput, {\n      labelText: \"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\",\n      id: \"about-me\",\n      formControlProps: {\n        fullWidth: true\n      },\n      inputProps: {\n        value: aboutMe,\n        onChange: function onChange(e) {\n          return usetaboutMe(e.target.value);\n        },\n        multiline: true,\n        rows: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })))), React.createElement(CardFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: function onClick() {\n        return showNotification(\"tl\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Update Profile\")))), React.createElement(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Card, {\n      profile: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(CardAvatar, {\n      profile: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#pablo\",\n      onClick: function onClick(e) {\n        return e.preventDefault();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: avatar,\n      alt: \"...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }))), React.createElement(CardBody, {\n      profile: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: classes.cardCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, city), React.createElement(\"h5\", {\n      className: classes.cardTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, firstName, \" \", lastName), React.createElement(\"p\", {\n      className: classes.cardTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \" \", email, \" \"), React.createElement(\"p\", {\n      className: classes.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, aboutMe), React.createElement(Button, {\n      color: \"primary\",\n      round: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Follow\"))))), React.createElement(Snackbar, {\n      place: \"tl\",\n      color: \"info\",\n      anchorOrigin: ({\n        bot: bot\n      }, {\n        cen: cen\n      }),\n      icon: AddAlert,\n      message: \"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\",\n      open: tl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Loading \"));\n  }\n}","map":{"version":3,"sources":["/Users/aadit/Desktop/Final Year/Code/EzHire2020/src/views/UserProfile/UserProfile.js"],"names":["React","useState","useEffect","makeStyles","InputLabel","GridItem","GridContainer","CustomInput","Button","Card","CardHeader","CardAvatar","CardBody","CardFooter","PropTypes","AddAlert","SnackbarContent","Snackbar","Config","avatar","Auth","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","UserProfile","classes","isLoad","setLoad","username","usetusername","firstName","usetfirstName","lastName","usetlastName","email","usetemail","city","usetcity","postalCode","usetpostalCode","aboutMe","usetaboutMe","tl","setTL","bot","cen","cleanup","id","window","setTimeout","clearTimeout","showNotification","place","user","localStorage","getItem","data1","fetch","serverurl","method","body","JSON","stringify","then","res","json","userprofile","updateprofile","data","value","onChange","e","target","fullWidth","multiline","rows","preventDefault","cardCategory","cardTitle","description"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport AddAlert from \"@material-ui/icons/AddAlert\";\n// core components\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport Config from \"../../Config.js\"\nimport avatar from \"assets/img/faces/apurva.jpg\";\nimport Auth from \"../../Auth.js\"\n\nconst styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n \n\n\nexport default function UserProfile() {\n  Auth()\n  const classes = useStyles();\n  const [isLoad, setLoad] = React.useState(\"false\")\n  const [username, usetusername]= React.useState(\"\")\n  const [firstName, usetfirstName]= React.useState(\"\")\n  const [lastName, usetlastName]= React.useState(\"\")\n  const [email, usetemail]= React.useState(\"\")\n  const [city, usetcity]= React.useState(\"\")\n  const [postalCode,usetpostalCode]= React.useState(\"\")\n  const [aboutMe,usetaboutMe]= React.useState(\"\")\n  const [tl, setTL] = React.useState(false);\n  let bot=\"bottom\"\n  let cen=\"center\"\n  React.useEffect(() => {\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      // to stop the warning of calling setState of unmounted component\n      var id = window.setTimeout(null, 0);\n      while (id--) {\n        window.clearTimeout(id);\n      }\n    };\n  });\n  const showNotification = place => {\n    switch (place) {\n      case \"tl\":\n        if (!tl) {\n          setTL(true);\n          setTimeout(function() {\n            setTL(false);\n          }, 1000);\n        }\n      }\n  }\n  useEffect(() => {\n  const user=localStorage.getItem('user_id')\n  let data1 ={\"user\" : user}\n  fetch(Config.serverurl+\"/getprofile\",{\n     method:'POST',\n    body:JSON.stringify(data1),\n      })\n      .then(res => res.json())\n      .then(res =>{\n      \n  let userprofile=res\n  if(isLoad==\"false\"){\n  usetusername(userprofile.username)\n  usetfirstName(userprofile.firstName)\n  usetlastName(userprofile.lastName)\n  usetemail(userprofile.email)\n  usetcity(userprofile.city)\n  usetpostalCode(userprofile.postalCode)\n  usetaboutMe(userprofile.aboutMe)\n  setLoad(\"true\")\n}\n})\n  })\n  function updateprofile(){\n    var data ={\"fname\": firstName,\"lname\":lastName,\"email\":email,\"city\":city,\"code\":postalCode,\"aboutme\" :aboutMe}\n  }\n\n  if(isLoad == \"true\"){\n  \n\n  return (\n    <div>\n    \n\n      <GridContainer>\n\n        <GridItem xs={12} sm={12} md={8}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Edit Profile</h4>\n              <p className={classes.cardCategoryWhite}>Complete your profile</p>\n            </CardHeader>\n            <CardBody>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={3}>\n                  <CustomInput\n                    labelText=\"Username\"\n                    id=\"username\"\n                    inputProps={{\n                      value:username,\n                      onChange:(e) => usetusername(e.target.value)\n                    }}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={4}>\n                  <CustomInput\n                    disabled=\"True\"\n                    labelText=\"Email address\"\n                    id=\"email-address\"\n                     inputProps={{\n                      value:email,\n                      onChange:(e) => usetemail(e.target.value)\n                    }}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n              </GridContainer>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    labelText=\"First Name\"\n                    id=\"first-name\"\n                     inputProps={{\n                      value:firstName,\n                      onChange:(e) => usetfirstName(e.target.value)\n                    }}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    labelText=\"Last Name\"\n                    id=\"last-name\"\n                     inputProps={{\n                      value:lastName,\n                      onChange:(e) => usetlastName(e.target.value)\n                    }}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n              </GridContainer>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={4}>\n                  <CustomInput\n                    labelText=\"City\"\n                    id=\"city\"\n                     inputProps={{\n                      value:city,\n                      onChange:(e) => usetcity(e.target.value)\n                    }}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={4}>\n                  <CustomInput\n                    labelText=\"Postal Code\"\n                    id=\"postal-code\"\n                     inputProps={{\n                      value:postalCode,\n                      onChange:(e) => usetpostalCode(e.target.value)\n                    }}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n              </GridContainer>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                  <InputLabel style={{ color: \"#AAAAAA\" }}>About me</InputLabel>\n                  <CustomInput\n                    labelText=\"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\"\n                    id=\"about-me\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    inputProps={{\n                      value:aboutMe,\n                      onChange:(e) => usetaboutMe(e.target.value),\n                      multiline: true,\n                      rows: 5\n                    }}\n                  />\n                </GridItem>\n              </GridContainer>\n            </CardBody>\n            <CardFooter>\n              <Button color=\"primary\" onClick={() => showNotification(\"tl\")}>Update Profile</Button>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card profile>\n            <CardAvatar profile>\n              <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                <img src={avatar} alt=\"...\" />\n              </a>\n            </CardAvatar>\n            <CardBody profile>\n              <h4 className={classes.cardCategory}>{city}</h4>\n              <h5 className={classes.cardTitle}>{firstName} {lastName}</h5>\n              <p className={classes.cardTitle}> {email} </p>\n              <p className={classes.description}>\n               {aboutMe}\n              </p>\n              <Button color=\"primary\" round>\n                Follow\n              </Button>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n       <Snackbar\n                  place=\"tl\"\n                  color=\"info\"\n                  anchorOrigin={{bot}, {cen}}\n                  icon={AddAlert}\n                  message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                  open={tl}\n                />\n    </div>\n  )\n \n}\nelse{\n return(\n  <div>\n  <h2>Loading </h2>\n  </div>\n  )\n\n}\n}\n"]},"metadata":{},"sourceType":"module"}