{"ast":null,"code":"import _slicedToArray from \"/Users/aadit/Desktop/Final Year/Code/EzHire2020/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aadit/Desktop/Final Year/Code/EzHire2020/src/views/Dashboard/PublicInterview.js\";\nimport ReactLoading from 'react-loading';\nimport React, { useEffect } from \"react\"; // react plugin for creating charts\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport InterviewCard from \"./InterviewCard.js\";\nimport MaterialTable from 'material-table';\nimport { Link } from 'react-router-dom';\nimport Config from \"../../Config.js\";\nimport Auth from \"../../Auth.js\";\nexport default function PublicInterview() {\n  Auth();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isloaded = _React$useState2[0],\n      setLoad = _React$useState2[1];\n\n  var ans;\n  var tabledata = [];\n  var namejson = {};\n  var k; //const [isschedule, setSchedule] = React.useState('false')\n\n  var user = localStorage.getItem('user_id');\n  var data = {\n    \"user\": user\n  };\n  var iterate = {\n    \"iter\": '1'\n  };\n  fetch(Config.serverurl + \"/publicinterview\", {\n    method: 'POST',\n    body: JSON.stringify(data)\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    //localStorage.setItem(\"interdata\",JSON.stringify(res))\n    console.log(res);\n    localStorage.setItem(\"intercand\", JSON.stringify(res)); //res=JSON.stringify(res)\n    //console.log(\"details \" + typeof(res)+res)\n\n    setLoad(true);\n    data = \"\";\n  });\n\n  if (isloaded) {\n    ans = localStorage.getItem('intercand');\n\n    if (ans != \"null\") {\n      var isspublic = true;\n      ans = JSON.parse(ans);\n      ans = Object.entries(ans).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        k = Object.entries(iterate).map(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              key1 = _ref4[0],\n              value1 = _ref4[1];\n\n          return React.createElement(Link, {\n            to: {\n              pathname: \"startinterview/\",\n              state: {\n                key: key,\n                cid: value.user,\n                ispublic: isspublic\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, \"Go To Interview\");\n        });\n        namejson = {\n          name: value.name,\n          cname: value.cname,\n          role: value.role,\n          togo: k\n        };\n        tabledata.push(namejson);\n        namejson = {};\n      });\n    }\n\n    return React.createElement(MaterialTable, {\n      columns: [{\n        title: 'Interview Name',\n        field: 'name'\n      }, {\n        title: 'Company Name',\n        field: 'cname'\n      }, {\n        title: 'Role',\n        field: 'role'\n      }, {\n        title: 'Link',\n        field: 'togo'\n      }],\n      data: tabledata,\n      title: 'Public Interviews',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(ReactLoading, {\n      type: 'cylon',\n      color: 'skyblue',\n      height: '18%',\n      width: '25%',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/aadit/Desktop/Final Year/Code/EzHire2020/src/views/Dashboard/PublicInterview.js"],"names":["ReactLoading","React","useEffect","GridItem","GridContainer","InterviewCard","MaterialTable","Link","Config","Auth","PublicInterview","useState","isloaded","setLoad","ans","tabledata","namejson","k","user","localStorage","getItem","data","iterate","fetch","serverurl","method","body","JSON","stringify","then","res","json","console","log","setItem","isspublic","parse","Object","entries","map","key","value","key1","value1","pathname","state","cid","ispublic","name","cname","role","togo","push","title","field","display","justifyContent"],"mappings":"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","sourcesContent":["import ReactLoading from 'react-loading';\nimport React,{useEffect} from \"react\";\n// react plugin for creating charts\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport InterviewCard from \"./InterviewCard.js\"\nimport MaterialTable from 'material-table'\nimport { Link } from 'react-router-dom'; \nimport Config from \"../../Config.js\"\nimport Auth from \"../../Auth.js\"\n\nexport default function PublicInterview(){\nAuth()\nconst [isloaded, setLoad] = React.useState(false)\nlet ans\nlet tabledata=[]\nlet namejson={}\nlet k\n//const [isschedule, setSchedule] = React.useState('false')\nconst user=localStorage.getItem('user_id')\nvar data ={\"user\":user}\nvar iterate={\"iter\":'1'}\nfetch(Config.serverurl+\"/publicinterview\",{\n        method:'POST',\n    body:JSON.stringify(data),\n      })\n      .then(res => res.json())\n      .then(res =>{\n    //localStorage.setItem(\"interdata\",JSON.stringify(res))\n        console.log(res)\n        localStorage.setItem(\"intercand\",JSON.stringify(res))\n        //res=JSON.stringify(res)\n        //console.log(\"details \" + typeof(res)+res)\n\n    setLoad(true)\n    data=\"\"\n})\n\n  if(isloaded){\n   ans = localStorage.getItem('intercand')\n        if(ans!=\"null\"){\n            let isspublic=true\n        ans=JSON.parse(ans)\n        ans=Object.entries(ans).map(([key, value]) => {\n        k=Object.entries(iterate).map(([key1, value1]) => {\n            return(\n                <Link\n                            to={{\n                                pathname: \"startinterview/\",\n                                state: {\n                                    key: key,\n                                    cid: value.user,\n                                    ispublic : isspublic\n                                }\n                            }}\n                        >Go To Interview</Link>\n                )\n        })\n        namejson={name : value.name, cname: value.cname, role:value.role, togo:k}\n        tabledata.push(namejson)\n        namejson={}\n        })\n }\n return(\n        <MaterialTable\n          columns={[\n            { title: 'Interview Name', field: 'name' },\n            { title: 'Company Name', field: 'cname' },\n            { title: 'Role', field: 'role'},\n            { title: 'Link', field: 'togo'}\n          ]}\n          data={tabledata}\n          title={'Public Interviews'}\n        />\n    )\n}\nelse{\n    return(\n  <div style={{display: 'flex', justifyContent: 'center'}}>\n  <ReactLoading type={'cylon'} color={'skyblue'} height={'18%'} width={'25%'} />\n  <br />\n  </div>\n  )\n}\n}"]},"metadata":{},"sourceType":"module"}